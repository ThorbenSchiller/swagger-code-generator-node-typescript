image: maven:3-jdk-8-alpine

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS package
  artifacts:
    paths:
      - target/
    expire_in: 1 week

deploy docker image:
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest --build-arg COMMIT_HASH=${CI_COMMIT_SHA} --build-arg BUILT_DATE="$(date '+%Y-%m-%d %H:%M:%S')" .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master

deploy tagged docker image:
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --build-arg COMMIT_HASH=${CI_COMMIT_SHA} --build-arg BUILT_DATE="$(date '+%Y-%m-%d %H:%M:%S')" .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags


